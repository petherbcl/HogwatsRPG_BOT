const { SlashCommandBuilder, PermissionsBitField, ButtonBuilder, ButtonStyle, ActionRowBuilder, EmbedBuilder } = require("discord.js");
const fs = require('fs');
const { RemoveSpecialCharacters } = require("../utils/utils");

async function createRpgRoles(client, guild) {
 
    console.warn('  STARTING ROLES CREATION');
    for (const roleInfo of client.rpgRoles) {
        let role = guild.roles.cache.find(r => r.name === roleInfo.name);
        if (!role) {
            await guild.roles.create({
                name: roleInfo.name,
                color: roleInfo.color,
                permissions: new PermissionsBitField(0n)
            })
                .then(() => {
                    console.warn(`      role created: "${roleInfo.name}"`);
                })
                .catch(error => {
                    console.error(error);
                });
        } else {
            console.log(`       Role "${roleInfo.name}" already exists.`);
        }
    }
    console.warn('  FINISHING ROLES CREATION');
}

async function createStructure(client, guild) {

    console.warn('  STARTING STRUCTURE CREATION');
    for (let category of client.structure) {
        let categoryChannel = guild.channels.cache.find((c) => c.name === category.name && c.type === 4);
        if (!categoryChannel) {
            categoryChannel = await guild.channels.create({ name: category.name, type: 4 });
            console.warn(`      Category ${categoryChannel.name} created.`);
        }

        for (const channel of category.channels) {
            channel.name = channel.name.toLowerCase().replaceAll(' ', '-');
            for (const role of channel.permissions) {
                if(client.roomRoles[channel.name]){
                    let channelRole = guild.roles.cache.find(r => r.name === client.roomRoles[channel.name]);
                    if (!channelRole) {
                        channelRole = await guild.roles.create({
                            name: client.roomRoles[channel.name],
                            color: role.color,
                            permissions: new PermissionsBitField()
                        });
                        console.warn(`          Role ${channelRole.name} created under channel ${channel.name}.`);
                    }
                }else{
                    console.warn(`          Channel ${channel.name} does not have roles.`);
                }
                
            }

            let catChannel = guild.channels.cache.find((c) => c.name === channel.name && c.type === channel.type);
            if (!catChannel) {
                catChannel = await guild.channels.create({
                    name: channel.name,
                    type: channel.type,
                    parent: categoryChannel.id,
                    permissionOverwrites: channel.permissions.map((role) => ({
                        id: guild.roles.cache.find((r) => r.name === (client.roomRoles[channel.name] || '@everyone')).id,
                        allow: role.allow.map((p) => PermissionsBitField.Flags[p]),
                        deny: role.deny.map((p) => PermissionsBitField.Flags[p]),
                    }))
                });
                console.warn(`          Channel ${catChannel.name} created under category ${categoryChannel.name}.`);

                if (catChannel.type === 2 && channel.hasPassage) {
                    const button = new ButtonBuilder()
                        .setCustomId('openRoomPassage')
                        .setStyle(ButtonStyle.Primary)
                        .setLabel('Ver Passagens');
                    const row = new ActionRowBuilder().addComponents(button);

                    await catChannel.send({
                        components: [row]
                    });
                }
            }
        }
    }
    console.warn('  FINISHING STRUCTURE CREATION');
}

async function setupExpressoChannel(guild) {
    const ExpressoChannel = guild.channels.cache.find((c) => c.name === 'expresso-de-hogwarts');

    const fetchedMessages = await ExpressoChannel.messages.fetch({ limit: 100 });
    await ExpressoChannel.bulkDelete(fetchedMessages, true);

    const button = new ButtonBuilder().setCustomId('newArrival').setStyle(ButtonStyle.Primary).setLabel('Entrar em Hogwarts');
    const row = new ActionRowBuilder().addComponents(button);
    const embed = new EmbedBuilder().setColor('#ffad00').setTitle('Expresso de Hogwarts').setDescription(`Caros novos alunos de Hogwarts,

√â com grande alegria que damos as boas-vindas √† Escola de Magia e Bruxaria de Hogwarts! üåü

Ao cruzarem os port√µes deste castelo milenar, preparem-se para um ano repleto de descobertas, desafios e, acima de tudo, magia. Aqui, cada sala guarda segredos e cada corredor conta hist√≥rias h√° muito tempo esquecidas.

Logo ser√£o divididos nas vossas Casas ‚Äî Grifin√≥ria, Sonserina, Corvinal ou Lufa-Lufa ‚Äî onde far√£o amizades que durar√£o para toda a vida e contribuir√£o para a vossa fam√≠lia em Hogwarts. Lembrem-se: a vossa Casa √© o vosso lar dentro do castelo.

Preparem as varinhas, memorizem os feiti√ßos e nunca se esque√ßam:
"A felicidade pode ser encontrada mesmo nas horas mais sombrias, se nos lembrarmos de acender a luz."

Estamos muito felizes por terem escolhido embarcar nesta jornada m√°gica connosco! Que este ano letivo seja brilhante, encantador e inesquec√≠vel.

Com os melhores cumprimentos,
Dire√ß√£o de Hogwarts
ü¶â‚ú®`);
    await ExpressoChannel.send({ embeds: [embed], components: [row], ephemeral: false });
}

async function startMessageCartaHogwarts(guild) {

    const CartaChannel = guild.channels.cache.find((c) => c.name === 'carta-de-hogwarts');
    const fetchedMessages = await CartaChannel.messages.fetch({ limit: 100 });
    await CartaChannel.bulkDelete(fetchedMessages, true);

    const embed = new EmbedBuilder().setColor('#ffad00').setTitle('Carta de Hogwats').setDescription(`Bem-vindo a Hogwarts, jovem bruxo ou bruxa!

Enquanto dire√ß√£o desta ilustre escola de magia e bruxaria, √© com grande prazer que o recebo em nossa comunidade.

Para que possa iniciar sua jornada m√°gica, por favor, envie sua ficha de personagem completa para que possamos integr√°-lo(a) ao nosso mundo.

Que a sua passagem por Hogwarts seja repleta de aventuras e aprendizado!

Com os melhores cumprimentos,
Dire√ß√£o de Hogwarts
ü¶â‚ú®`).setImage('https://imgur.com/g0NU8LS.png');;

    const button = new ButtonBuilder().setCustomId('sendNewLetter').setStyle(ButtonStyle.Primary).setLabel('Enviar Carta');
    const row = new ActionRowBuilder().addComponents(button);

    await CartaChannel.send({ embeds: [embed], components: [row], ephemeral: false });
}

async function startMapaHogwarts(guild) {

    const MapaChannel = guild.channels.cache.find((c) => c.name === 'consultar-mapa');
    const fetchedMessages = await MapaChannel.messages.fetch({ limit: 100 });
    await MapaChannel.bulkDelete(fetchedMessages, true);

    const embed = new EmbedBuilder().setColor('#ffad00').setTitle('Mapa de Hogwarts').setDescription(`Consulte o mapa de Hogwarts para encontrar salas, corredores e passagens secretas. üó∫Ô∏è`)

    const button = new ButtonBuilder().setCustomId('openmap').setStyle(ButtonStyle.Primary).setLabel('Abrir Mapa');
    const row = new ActionRowBuilder().addComponents(button);

    await MapaChannel.send({ embeds: [embed], components: [row], ephemeral: false });
}

async function manageBecoDiagonal(guild) {

    // Banco Gringotes
    const bancogringoteschannel = guild.channels.cache.find((c) => c.name === 'banco-gringotes');
    let fetchedMessages = await bancogringoteschannel.messages.fetch({ limit: 100 });
    await bancogringoteschannel.bulkDelete(fetchedMessages, true);

    let embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/1apZAo4.png');
    let embed = new EmbedBuilder().setColor('#ffad00').setTitle('Banco Gringotes').setDescription(`*Bem-vindo ao Banco Gringotes, o mais seguro e prestigiado banco do mundo bruxo!*

Administrado por duendes h√° s√©culos, Gringotes √© o local ideal para guardar seus gale√µes, sicles e nuques, al√©m de proteger seus tesouros mais valiosos. Nossas ab√≥badas subterr√¢neas s√£o encantadas com as magias mais poderosas para garantir que apenas o leg√≠timo propriet√°rio tenha acesso.

Lembre-se: qualquer tentativa de invas√£o ou comportamento inadequado ser√° punida... severamente.

Confie em Gringotes, onde sua fortuna est√° sempre em m√£os (ou garras) seguras.
*Desejamos-lhe um dia m√°gico e pr√≥spero!*`)
    let embed2 = new EmbedBuilder().setColor('#ffad00').setDescription(`Ao clicar no bot√£o abaixo um dados D6 ser√° lan√ßado e multiplicado por 100 para calcular o valor em gal√µes que ir√° ganhar (1D6 x 100) `)
    let button = new ButtonBuilder().setCustomId('gringotsLevantar').setStyle(ButtonStyle.Primary).setLabel('Levantar Gale√µes');
    let row = new ActionRowBuilder().addComponents(button);

    await bancogringoteschannel.send({ embeds: [embedImg,embed,embed2], components: [row], ephemeral: false });

    // Floreios e Borr√µes
    const floreioseborroeschannel = guild.channels.cache.find((c) => c.name === 'floreios-e-borr√µes');
    fetchedMessages = await floreioseborroeschannel.messages.fetch({ limit: 100 });
    await floreioseborroeschannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/O6PfpGh.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle('Floreios e Borr√µes').setDescription(`Aqui, a magia das palavras ganha vida!

Seja para encontrar aquele grim√≥rio raro, um cl√°ssico das hist√≥rias m√°gicas ou o mais recente guia de po√ß√µes, temos exatamente o que precisa para enriquecer os seus estudos e aventuras.

Entre e explore! As melhores hist√≥rias come√ßam com um bom livro. ü™Ñ`);
    button = new ButtonBuilder().setCustomId('floreioseborroesCompra').setStyle(ButtonStyle.Primary).setLabel('Comprar Livros 1¬∫ ano - 8$G');
    row = new ActionRowBuilder().addComponents(button);
    await floreioseborroeschannel.send({ embeds: [embedImg,embed], components: [row], ephemeral: false });

    // Madame Malkin - Roupas para Todas as Ocasi√µes
    const madamemalkinschannel = guild.channels.cache.find((c) => c.name === 'madame-malkins-roupas-para-todas-as-ocasioes');
    fetchedMessages = await madamemalkinschannel.messages.fetch({ limit: 100 });
    await madamemalkinschannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/cG2Zbck.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle('Madame Malkin - Roupas para Todas as Ocasi√µes').setDescription(`üßô‚Äç‚ôÇÔ∏è Bem-vindo √† Madame Malkin - Roupas para Todas as Ocasi√µes!

Seja voc√™ um jovem bruxo adquirindo seu primeiro uniforme de Hogwarts ou um mago experiente em busca de vestes elegantes para um evento especial, aqui encontrar√° o que precisa. Nossas vestes s√£o confeccionadas com tecidos encantados da mais alta qualidade e personalizadas para garantir conforto e estilo, seja para o dia a dia ou ocasi√µes memor√°veis.

Entre, experimente e deixe que a magia do tecido trabalhe a seu favor! ‚ú®

Se precisar de ajuda, nossa equipe estar√° encantada em atender. ü™Ñ`);
    button = new ButtonBuilder().setCustomId('madamemalkinsCompra').setStyle(ButtonStyle.Primary).setLabel('Comprar Roupas 1¬∫ ano  - 6$G');
    row = new ActionRowBuilder().addComponents(button);
    await madamemalkinschannel.send({ embeds: [embedImg,embed], components: [row], ephemeral: false });

    // Olivaras
    //Varinha m√°gica: Essencial para a pr√°tica de feiti√ßos. As varinhas s√£o personalizadas para cada bruxo e podem ser adquiridas na Olivaras, renomada loja de varinhas.
    const olivaraschannel = guild.channels.cache.find((c) => c.name === 'olivaras');
    fetchedMessages = await olivaraschannel.messages.fetch({ limit: 100 });
    await olivaraschannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/TuwOqmH.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle('Olivaras - Fabricantes de Varinhas de Qualidade Desde 382 a.C.').setDescription(`üßô‚Äç‚ôÇÔ∏è Bem-vindo √† Olivaras - Fabricantes de Varinhas de Qualidade Desde 382 a.C.!

Aqui, onde a magia encontra o artesanato, ajudaremos voc√™ a encontrar a varinha que o escolher√°. Cada varinha √© √∫nica, fabricada com materiais raros e n√∫cleos m√°gicos poderosos, perfeitos para canalizar sua magia com excel√™ncia.

Explore as prateleiras, sinta a energia das varinhas ao seu redor e lembre-se: a varinha escolhe o bruxo. ‚ú®

Que esta seja a primeira de muitas aventuras m√°gicas! Se precisar de orienta√ß√£o, estou √† disposi√ß√£o. ü™Ñ`);
    button = new ButtonBuilder().setCustomId('olivarasCompra').setStyle(ButtonStyle.Primary).setLabel('Comprar Varinha  - 1$G');
    row = new ActionRowBuilder().addComponents(button);
    await olivaraschannel.send({ embeds: [embedImg,embed], components: [row], ephemeral: false });

    // Caldeir√µes de Potage
    //Caldeir√£o (estanho, tamanho padr√£o 2): Utilizado nas aulas de Po√ß√µes. Dispon√≠vel na Loja de Caldeir√µes de Potage.
    const caldeiroesdepotagechannel = guild.channels.cache.find((c) => c.name === 'loja-de-caldeiroes-de-potage');
    fetchedMessages = await caldeiroesdepotagechannel.messages.fetch({ limit: 100 });
    await caldeiroesdepotagechannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/XkIyjCK.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle('Caldeir√µes de Potage - Caldeir√µes de Qualidade para Todas as Po√ß√µes').setDescription(`üßô‚Äç‚ôÇÔ∏è Bem-vindo √† Caldeir√µes de Potage - Caldeir√µes de Qualidade para Todas as Po√ß√µes!

Aqui encontrar√° caldeir√µes perfeitos para cada necessidade m√°gica: de estanho, bronze, cobre ou prata; tamanhos padr√£o ou autoagitantes, todos prontos para transformar seus ingredientes em po√ß√µes poderosas.

Seja voc√™ um estudante iniciando as aulas de Po√ß√µes ou um mestre alquimista em busca de excel√™ncia, temos o caldeir√£o ideal para o seu talento.

Escolha com cuidado, pois a magia come√ßa no recipiente certo! Se precisar de ajuda, nossa equipe estar√° pronta para auxiliar. ü™Ñ`);
    button = new ButtonBuilder().setCustomId('caldeiroesdepotageCompra').setStyle(ButtonStyle.Primary).setLabel('Comprar Caldeir√£o  - 1$G');
    row = new ActionRowBuilder().addComponents(button);
    await caldeiroesdepotagechannel.send({ embeds: [embedImg,embed], components: [row], ephemeral: false });
    
    // Botic√°rio Slug & Jiggers
    //Conjunto de frascos: Para armazenar ingredientes e po√ß√µes. Podem ser encontrados no Botic√°rio Slug & Jiggers.
    const boticarioslugjiggerschannel = guild.channels.cache.find((c) => c.name === 'boticario-slug-e-jiggers');
    fetchedMessages = await boticarioslugjiggerschannel.messages.fetch({ limit: 100 });
    await boticarioslugjiggerschannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/2Wah9DI.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle('Botic√°rio Slug & Jiggers - Ingredientes M√°gicos para Po√ß√µes Perfeitas').setDescription(`üßô‚Äç‚ôÇÔ∏è Bem-vindo ao Botic√°rio Slug & Jiggers - Ingredientes M√°gicos para Po√ß√µes Perfeitas!

Aqui encontrar√° tudo o que precisa para preparar desde po√ß√µes simples at√© elixires complexos. Dos mais raros ingredientes, como olhos de trit√£o e raiz de asf√≥delo, aos b√°sicos como bezoares e asas de morcego, nossa sele√ß√£o √© de qualidade incompar√°vel.

Misture, crie e explore os limites da alquimia! Se precisar de ajuda para encontrar um ingrediente espec√≠fico ou orienta√ß√£o para sua pr√≥xima cria√ß√£o m√°gica, estamos √† disposi√ß√£o.

Sua jornada na arte das po√ß√µes come√ßa aqui! ü™Ñ‚ú®`);
    button = new ButtonBuilder().setCustomId('boticarioslugjiggersCompra').setStyle(ButtonStyle.Primary).setLabel('Comprar Frascos Vazios  - 1$G');
    row = new ActionRowBuilder().addComponents(button);
    await boticarioslugjiggerschannel.send({ embeds: [embedImg,embed], components: [row], ephemeral: false });

    // Wiseacre's Wizarding Equipment
    //Telesc√≥pio: Necess√°rio para as aulas de Astronomia. Dispon√≠vel na Wiseacre's Wizarding Equipment.
    //Balan√ßa de lat√£o: Usada para pesar ingredientes em Po√ß√µes. Tamb√©m encontrada na Wiseacre's Wizarding Equipment.
    const wiseacreswizardingwquipmentchannel = guild.channels.cache.find((c) => c.name === 'wiseacres-wizarding-equipment');
    fetchedMessages = await wiseacreswizardingwquipmentchannel.messages.fetch({ limit: 100 });
    await wiseacreswizardingwquipmentchannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/H9BJ7Nt.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle(`Wiseacre's Wizarding Equipment - Equipamentos M√°gicos de Confian√ßa para Todos os Feiticeiros`).setDescription(`üßô‚Äç‚ôÇÔ∏è Bem-vindo √† Wiseacre's Wizarding Equipment - Equipamentos M√°gicos de Confian√ßa para Todos os Feiticeiros!

Aqui encontrar√° os itens essenciais para sua jornada m√°gica: telesc√≥pios encantados, globos celestes, ampulhetas de areia temporal, e muito mais! Seja para estudos em Hogwarts, viagens m√°gicas ou explora√ß√µes arcanas, nossos equipamentos combinam funcionalidade e um toque de eleg√¢ncia.

Descubra o que precisa para tornar sua magia ainda mais incr√≠vel! Se tiver d√∫vidas ou precisar de assist√™ncia, ficaremos encantados em ajudar. ‚ú®

Prepare-se para transformar o ordin√°rio em extraordin√°rio! ü™Ñ`);
    button = new ButtonBuilder().setCustomId('wiseacreswizardingwquipmentTelescopioCompra').setStyle(ButtonStyle.Primary).setLabel('Comprar Telesc√≥pio  - 1$G');
    let button2 = new ButtonBuilder().setCustomId('wiseacreswizardingwquipmentBalacaCompra').setStyle(ButtonStyle.Primary).setLabel('Comprar Balan√ßa de Lat√£o - 1$G');
    row = new ActionRowBuilder().addComponents(button).addComponents(button2);
    await wiseacreswizardingwquipmentchannel.send({ embeds: [embedImg,embed], components: [row], ephemeral: false });

    // Emp√≥rio das Corujas
    const emporiodascorujaschannel = guild.channels.cache.find((c) => c.name === 'emporio-de-corujas-correio-corujas');
    fetchedMessages = await emporiodascorujaschannel.messages.fetch({ limit: 100 });
    await emporiodascorujaschannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/uBmnuhg.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle(`Emp√≥rio das Corujas - Sua Conex√£o com o Mundo M√°gico`).setDescription(`üßô‚Äç‚ôÇÔ∏è Bem-vindo ao Emp√≥rio das Corujas - Sua Conex√£o com o Mundo M√°gico!

Aqui encontrar√° corujas majestosas e confi√°veis para todas as suas necessidades de correspond√™ncia e companhia. Desde a √°gil coruja-das-torres √† resistente coruja-das-neves, temos o parceiro alado perfeito para cada feiticeiro.

Al√©m disso, oferecemos tudo o que sua coruja precisa: gaiolas encantadas, ra√ß√µes especiais e acess√≥rios m√°gicos para garantir o m√°ximo conforto e efici√™ncia.

Escolha com sabedoria, pois uma boa coruja √© mais do que um mensageiro - √© um amigo leal! Se precisar de ajuda, estamos aqui para auxiliar. ü™Ñ‚ú®`);

    const corujasList = [
        "Coruja Aguia",
        "Coruja Barrada",
        "Coruja Chifruda",
        "Coruja Cinzenta",
        "Coruja das Neves",
        "Coruja das Torres",
        "Coruja de Cabe√ßa Laranja",
        "Coruja de Calda Longa",
        "Coruja de Olhos Miudos",
        "Coruja do Campo",
        "Coruja do Leste",
        "Coruja do Oeste",
        "Coruja Dourada",
        "Coruja Marrom",
        "Coruja Negra",
        "Coruja Observadora",
        "Coruja Parda",
        "Coruja Piante"
    ];

    let buttonsList = [];
    for(const coruja of corujasList){
        buttonsList.push( new ButtonBuilder().setCustomId(`emporiodascorujas_${coruja.replace(/\s+/g, '')}`).setStyle( ButtonStyle.Primary).setLabel(`ü¶â Comprar ${coruja}  - 10$G`) )
    }
    let buttonsAux = [...buttonsList]
    row = []
    while(buttonsAux.length > 0){
        row.push({type:1, components: [...buttonsAux.slice(0,5)] })
        buttonsAux = buttonsAux.slice(5)
    }

    await emporiodascorujaschannel.send({ embeds: [embedImg,embed], components: row, ephemeral: false });

    // Animais M√°gicos (para gatos, sapos¬†e¬†outros).
    const animaismagicoschannel = guild.channels.cache.find((c) => c.name === 'animais-magicos');
    fetchedMessages = await animaismagicoschannel.messages.fetch({ limit: 100 });
    await animaismagicoschannel.bulkDelete(fetchedMessages, true);

    embedImg = new EmbedBuilder().setColor('#ffad00').setImage('https://imgur.com/YZyb3SY.png');
    embed = new EmbedBuilder().setColor('#ffad00').setTitle(`Animais M√°gicos - Criaturas Fant√°sticas Esperam por Voc√™`).setDescription(`üßô‚Äç‚ôÇÔ∏è Bem-vindo √† Animais M√°gicos - Criaturas Fant√°sticas Esperam por Voc√™!

Explore um mundo encantado repleto de companheiros m√°gicos! Desde sapos saltitantes e ratos astutos a majestosos gatos m√°gicos e majestosas criaturas raras, aqui encontrar√° o amigo perfeito para partilhar suas aventuras.

Tamb√©m oferecemos uma variedade de alimentos encantados, habitats personalizados e acess√≥rios m√°gicos para garantir que seu novo companheiro receba o melhor cuidado poss√≠vel.

Porque todo grande bruxo merece uma criatura m√°gica ao seu lado! Se precisar de ajuda para escolher ou cuidar do seu novo amigo, estamos √† disposi√ß√£o. ü™Ñ‚ú®`);

    const animaisList = [
        "Puffskein",
        "Kneazle",
        "Rato",
        "Sapo"
    ];

    buttonsList = [];
    for(const animal of animaisList){
        buttonsList.push( new ButtonBuilder().setCustomId(`animaismagicos_${animal.replace(/\s+/g, '')}`).setStyle( ButtonStyle.Primary).setLabel(`Comprar ${animal}  - 10$G`) )
    }
    buttonsAux = [...buttonsList]
    row = []
    while(buttonsAux.length > 0){
        row.push({type:1, components: [...buttonsAux.slice(0,5)] })
        buttonsAux = buttonsAux.slice(5)
    }

    await animaismagicoschannel.send({ embeds: [embedImg,embed], components: row, ephemeral: false });
}

async function checkUsersInventory(guild) {
    const members = await guild.members.fetch();
    for (const member of members) {
        if(member[1].user.bot)  continue;

        const user = member[1].user;
        if (!fs.existsSync(`./RPGData/players/inv_${RemoveSpecialCharacters(user.username)}_${user.id}.json`)) {
            fs.writeFileSync(`./RPGData/players/inv_${RemoveSpecialCharacters(user.username)}_${user.id}.json`,
                JSON.stringify({inventario:{}}), (err) => {
                    if (err) {
                        console.error('Erro ao criar o arquivo invent√°rio:', err);
                    } else {
                        console.log('Arquivo invent√°rio criado com sucesso!');
                    }
                }
            );
        }
    }
}

module.exports = {
    admin: true,
    data: new SlashCommandBuilder()
        .setName('startdiscord')
        .setDescription('[ADM] Criar todas a estrutura do discord'),
    async execute(interaction, client) {

        await interaction.deferReply({ ephemeral: true }).catch( () => {} );
        
        const guild = client.guilds.cache.get(interaction.guildId);
        if (!guild) return console.error("Guild not found");

        await guild.roles.fetch(); // For√ßa o carregamento da cache
        await guild.channels.fetch();
        
        if (!guild.roles || !guild.roles.cache || !guild.channels || !guild.channels.cache) {
            console.error("Roles or channels cache is unavailable.");
            return;
        }

        await createRpgRoles(client, guild)
        await createStructure(client, guild)
        await setupExpressoChannel(guild)
        await startMessageCartaHogwarts(guild)
        await startMapaHogwarts(guild)
        await manageBecoDiagonal(guild)
        await checkUsersInventory(guild)

        await interaction.editReply({ content: 'Estrutura criada com sucesso!', ephemeral: true });
    }
}